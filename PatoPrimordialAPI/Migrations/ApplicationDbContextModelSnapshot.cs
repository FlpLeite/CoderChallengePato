// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PatoPrimordialAPI.Infrastructure.Data;

#nullable disable

namespace PatoPrimordialAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PatoPrimordialAPI.Domain.Entities.AnalisePato", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CalculadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ClassePrioridade")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("ClasseRisco")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<double>("CustoTransporte")
                        .HasColumnType("double precision");

                    b.Property<double>("DistKm")
                        .HasColumnType("double precision");

                    b.Property<long>("PatoId")
                        .HasColumnType("bigint");

                    b.Property<int>("PoderioNecessario")
                        .HasColumnType("integer");

                    b.Property<double>("Prioridade")
                        .HasColumnType("double precision");

                    b.Property<int>("RiscoTotal")
                        .HasColumnType("integer");

                    b.Property<int>("ValorCientifico")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PatoId")
                        .IsUnique();

                    b.ToTable("analise_pato", (string)null);
                });

            modelBuilder.Entity("PatoPrimordialAPI.Domain.Entities.Avistamento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal>("AlturaCm")
                        .HasColumnType("numeric(18,4)");

                    b.Property<string>("AlturaUnidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("AlturaValor")
                        .HasColumnType("numeric(18,4)");

                    b.Property<int?>("Bpm")
                        .HasColumnType("integer");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<double>("Confianca")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("DroneId")
                        .HasColumnType("bigint");

                    b.Property<string>("EstadoPato")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<int?>("MutacoesQtde")
                        .HasColumnType("integer");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)");

                    b.Property<long>("PatoId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("PesoG")
                        .HasColumnType("numeric(18,4)");

                    b.Property<string>("PesoUnidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("PesoValor")
                        .HasColumnType("numeric(18,4)");

                    b.Property<string>("PoderDescricao")
                        .HasColumnType("text");

                    b.Property<string>("PoderNome")
                        .HasColumnType("text");

                    b.Property<string>("PoderTagsCsv")
                        .HasColumnType("text");

                    b.Property<decimal>("PrecisaoM")
                        .HasColumnType("numeric(18,4)");

                    b.Property<string>("PrecisaoUnidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("PrecisaoValor")
                        .HasColumnType("numeric(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("CriadoEm");

                    b.HasIndex("DroneId");

                    b.HasIndex("PatoId");

                    b.ToTable("avistamentos", (string)null);
                });

            modelBuilder.Entity("PatoPrimordialAPI.Domain.Entities.Drone", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("FabricanteId")
                        .HasColumnType("bigint");

                    b.Property<string>("NumeroSerie")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<decimal?>("PrecisaoNominalMaxM")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("PrecisaoNominalMinCm")
                        .HasColumnType("numeric(18,4)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("UltimoContatoEm")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("FabricanteId");

                    b.HasIndex("NumeroSerie")
                        .IsUnique();

                    b.ToTable("drones", (string)null);
                });

            modelBuilder.Entity("PatoPrimordialAPI.Domain.Entities.Fabricante", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Marca")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("PaisOrigem")
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)");

                    b.HasKey("Id");

                    b.ToTable("fabricantes", (string)null);
                });

            modelBuilder.Entity("PatoPrimordialAPI.Domain.Entities.ParametroAnalise", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("AtualizadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Chave")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<double?>("ValorNum")
                        .HasColumnType("double precision");

                    b.Property<string>("ValorTxt")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.HasIndex("Chave")
                        .IsUnique();

                    b.ToTable("parametros_analise", (string)null);
                });

            modelBuilder.Entity("PatoPrimordialAPI.Domain.Entities.Pato", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal>("AlturaCm")
                        .HasColumnType("numeric(18,4)");

                    b.Property<DateTime>("AtualizadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Bpm")
                        .HasColumnType("integer");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<int?>("MutacoesQtde")
                        .HasColumnType("integer");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)");

                    b.Property<decimal>("PesoG")
                        .HasColumnType("numeric(18,4)");

                    b.Property<string>("PoderDescricao")
                        .HasColumnType("text");

                    b.Property<string>("PoderNome")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("PoderTagsCsv")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<long?>("PontoReferenciaId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("PrecisaoM")
                        .HasColumnType("numeric(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.HasIndex("PontoReferenciaId");

                    b.ToTable("patos", (string)null);
                });

            modelBuilder.Entity("PatoPrimordialAPI.Domain.Entities.PontoReferencia", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<double>("RaioMetros")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("pontos_referencia", (string)null);
                });

            modelBuilder.Entity("PatoPrimordialAPI.Domain.Entities.AnalisePato", b =>
                {
                    b.HasOne("PatoPrimordialAPI.Domain.Entities.Pato", "Pato")
                        .WithOne("Analise")
                        .HasForeignKey("PatoPrimordialAPI.Domain.Entities.AnalisePato", "PatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pato");
                });

            modelBuilder.Entity("PatoPrimordialAPI.Domain.Entities.Avistamento", b =>
                {
                    b.HasOne("PatoPrimordialAPI.Domain.Entities.Drone", "Drone")
                        .WithMany("Avistamentos")
                        .HasForeignKey("DroneId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PatoPrimordialAPI.Domain.Entities.Pato", "Pato")
                        .WithMany("Avistamentos")
                        .HasForeignKey("PatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drone");

                    b.Navigation("Pato");
                });

            modelBuilder.Entity("PatoPrimordialAPI.Domain.Entities.Drone", b =>
                {
                    b.HasOne("PatoPrimordialAPI.Domain.Entities.Fabricante", "Fabricante")
                        .WithMany("Drones")
                        .HasForeignKey("FabricanteId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Fabricante");
                });

            modelBuilder.Entity("PatoPrimordialAPI.Domain.Entities.Pato", b =>
                {
                    b.HasOne("PatoPrimordialAPI.Domain.Entities.PontoReferencia", "PontoReferencia")
                        .WithMany("Patos")
                        .HasForeignKey("PontoReferenciaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("PontoReferencia");
                });

            modelBuilder.Entity("PatoPrimordialAPI.Domain.Entities.Drone", b =>
                {
                    b.Navigation("Avistamentos");
                });

            modelBuilder.Entity("PatoPrimordialAPI.Domain.Entities.Fabricante", b =>
                {
                    b.Navigation("Drones");
                });

            modelBuilder.Entity("PatoPrimordialAPI.Domain.Entities.Pato", b =>
                {
                    b.Navigation("Analise");

                    b.Navigation("Avistamentos");
                });

            modelBuilder.Entity("PatoPrimordialAPI.Domain.Entities.PontoReferencia", b =>
                {
                    b.Navigation("Patos");
                });
#pragma warning restore 612, 618
        }
    }
}
